name: orderlines

services:

  orderlines_web:
    container_name: orderlines_web
    image: orderlines:${ORDERLINES_TAG}
    restart: always
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - "15900:15900"
    env_file:
      - .env
    command: [ "/usr/local/bin/orderlines", "runserver" ]

  orderlines_worker:
    container_name: orderlines_worker
    image: orderlines:${ORDERLINES_TAG}
    restart: always
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    env_file:
      - .env
    command:
      [
        "/usr/local/bin/celery",
        "-A",
        "celery_worker.celery",
        "worker",
        "--loglevel",
        "info",
        "--pool",
        "solo"
      ]

  orderlines_schedule:
    container_name: orderlines_schedule
    image: orderlines:${ORDERLINES_TAG}
    restart: always
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    env_file:
      - .env
    command: [ "/usr/local/bin/orderlines", "schedule" ]

  orderlines_grpc:
    container_name: orderlines_grpc
    image: orderlines:${ORDERLINES_TAG}
    restart: always
    ports:
      - "50051:50051"
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    env_file:
      - .env
    command: [ "/usr/local/bin/orderlines", "run-grpc" ]

  mysql:
    container_name: mysql
    healthcheck:
      test:
        [
          "CMD",
          "mysqladmin",
          "-u",
          "${MYSQL_ROOT_USER}",
          "-p${MYSQL_ROOT_PASSWORD}",
          "ping",
          "-h",
          "localhost"
        ]
      interval: 3s
      timeout: 1s
      retries: 5
    image: mysql:8.0
    ports:
      - "3306:3306"
    volumes:
      - ${PROJECT_FILE_PATH}/mysql:/var/lib/mysql
      - ./my.cnf:/etc/my.cnf
      - /etc/localtime:/etc/localtime
    env_file:
      - .env

  redis:
    container_name: redis
    image: "redis:alpine"
    ports:
      - "6379:6379"
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 3s
      timeout: 1s
      retries: 5

  mongo:
    restart: always
    image: mongo:latest
    container_name: mongo
    ports:
      - 27017:27017
    volumes:
      - ${PROJECT_FILE_PATH}/mongodb:/data/db
      - /etc/localtime:/etc/localtime
    environment:
      - TZ=Asia/Shanghai
      - wiredTigerCacheSizeGB=1.5
